{"version":3,"sources":["js/panels/home/home.js","js/components/Question.js","js/panels/home/test.js","App.js","js/services/VK.js","index.js"],"names":["Home","react_default","a","createElement","className","href","style","width","height","boxShadow","backgroundColor","display","justifyContent","marginTop","textAlign","onClick","this","startTest","bind","marginRight","alignItems","marginLeft","src","level","props","onStartTest","React","Component","Question","state","givenAnswerId","lastQuestion","_this2","answers","question","split","id","prepareForNewQuestion","margin","color","text","map","answer","index","renderAnswer","correctAnswered","cardClass","key","answerReceived","onAnswerResult","setState","rightAnswer","Promise","resolve","setTimeout","API_URL","Test","nextButton","showImg","questions","currentQuestionIndex","questionCount","correctAnswers","currentState","time","answered","_this","openPopout","es6","actions","title","autoclose","action","onClose","closePopout","isCorrect","scrollIntoView","behavior","length","console","log","getMenuContent","getLoadingContent","getQuestionComponent","getSummaryContent","_this$props","content","setPage","withoutEpic","getCurrentContent","_this3","loadRandomQuestions","_this4","axios","get","then","res","data","_this5","correctPercentage","Math","round","marginBottom","hidePoll","flexWrap","renderPollOption","customPollAnswer","type","classname","placeholder","onChange","event","target","value","customPollAnswerReceived","openHomepage","window","location","_this6","pollAnswer","background-color","onPollAnswered","pollAnswered","alert","post","catch","error","_this7","components_Question","ref","button","showNextQuestion","fontWeight","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","screen","lastAndroidBackAction","goBack","dispatch","bridge","send","subscribe","e","onpopstate","timeNow","Date","history","pushState","home_Home","test_Test","testLevel","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aff91d78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <header className=\"header\">\r\n               <h3><a href=\"https://abbysoft.org\">AbbySoft | <small>Подготовка к собеседованию Java</small></a></h3>\r\n               </header>\r\n               <div className=\"flex\">\r\n                   {/* <div style={{width:\"80%\", backgroundColor: \"white\", paddingTop: \"150px\", paddingLeft: \"90px\", paddingRight: \"50px\"}}>\r\n                       <h1 style={{color: \"rgb(55, 55, 122)\"}}>LearnIT!</h1>\r\n                       <h1>Проверить свои знания Java или подготовиться к собеседованию</h1>\r\n                       <p className=\"secondary-text\">Тест Java с вопросами из различных областей языка для изучения и эффективной подготовки к собеседованиям.</p>\r\n                   </div> */}\r\n                   <div className=\"contrast_block white_color\" style={{width:\"100%\", height: \"800px\", boxShadow: \"0 0 10px rgba(0,0,0,0.5)\", backgroundColor: \"rgb(55, 55, 122)\", display: 'flex', justifyContent: 'center'}}>\r\n                       <div className=\"center-hor\" style={{marginTop: '100px'}}>\r\n                           <h1>Java тесты для изучения и подготовки к собеседованию</h1>\r\n                           <h1 style={{marginTop: \"50px\"}}>Начать тестирование</h1>\r\n                           <ul className=\"level-chooser\" style={{textAlign: \"center\"}}>\r\n                               <p className=\"menu_item\" onClick={this.startTest.bind(this, \"junior\")}>Начинающий уровень (Junior)</p>\r\n                               <p className=\"menu_item\" onClick={this.startTest.bind(this, \"middle\")}>Средний уровень (Middle)</p>\r\n                               <p className=\"menu_item\" onClick={this.startTest.bind(this, \"senior\")}>Продвинутый уровень (Senior)</p>\r\n                           </ul>\r\n                           <div className=\"center-vertically\">\r\n                                <a style={{marginRight: \"10px\", display: \"flex\", alignItems: \"center\"}} href=\"https://vk.com/javatests\">Перейти в группу  <img width=\"50\" style={{marginLeft: \"10px\"}} src=\"https://leonardo.osnova.io/7e0ec5a0-1e56-2e90-de73-6c402276900d/-/resize/900\"></img></a>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    startTest(level) {        \r\n        this.props.onStartTest(level)\r\n    }\r\n}","import React from 'react';\r\n\r\nclass Question extends React.Component {\r\n\r\n    state = {\r\n        givenAnswerId: null,\r\n        lastQuestion: null\r\n    }\r\n\r\n    render() {\r\n        const answers = this.props.question.answers.split(';')\r\n        if (this.state.lastQuestion != this.props.question.id) {\r\n            this.prepareForNewQuestion()\r\n        }\r\n\r\n        return (\r\n            <div style={{width: \"85%\", margin: \"auto auto\"}}>\r\n                <h1 style={{color: \"white\"}}>{this.props.question.text}</h1>\r\n                <ul className=\"level-chooser\">\r\n                    {answers.map((answer, index) => this.renderAnswer(answer, index))}\r\n                </ul>\r\n            </div>);\r\n    }\r\n\r\n    prepareForNewQuestion() {\r\n        this.state = ({\r\n            givenAnswerId: null,\r\n            correctAnswered: null,\r\n            lastQuestion: this.props.question.id\r\n        })\r\n    }\r\n\r\n    renderAnswer(answer, index) {\r\n        const cardClass = (this.state.givenAnswerId !== index || this.state.correctAnswered == null) ? \"menu_item\" \r\n        : this.state.correctAnswered ? \"answer_card_correct\" : \"answer_card_wrong\"\r\n\r\n        return (\r\n        <p className={cardClass} key={index} onClick={this.answerReceived.bind(this, index)}>\r\n            <a className=\"answer_number\">{index + 1}.</a>\r\n            <a className=\"answer_text\">{answer}</a>\r\n        </p>\r\n        )\r\n    }\r\n\r\n    async answerReceived(index) {\r\n        if (this.props.onAnswerResult == null || this.state.givenAnswerId != null) {\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            givenAnswerId: index,\r\n            correctAnswered: index == this.props.question.rightAnswer,\r\n            lastQuestion: this.props.question.id\r\n        })\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 100))\r\n\r\n        this.props.onAnswerResult(this.state.correctAnswered)\r\n    }\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\nimport Question from '../../components/Question'\r\n\r\nimport axios from 'axios'\r\nimport {Div, Panel, Alert, Group, Button, PanelHeader} from \"@vkontakte/vkui\"\r\n\r\nconst API_URL = \"https://192.168.1.7:433\"\r\n\r\nexport default class Test extends React.Component {\r\n\r\n    nextButton = null;\r\n\r\n    componentDidMount() {\r\n        this.startTest(this.props.level)\r\n    }\r\n\r\n    state = {\r\n        showImg: false,\r\n        questions: [],\r\n        currentQuestionIndex: 0,\r\n        questionCount: 10,\r\n        correctAnswers: 0,\r\n        currentState: \"performingTest\",\r\n        time: 10,\r\n        answered: false,\r\n    };\r\n\r\n    testIsOver() {\r\n        this.setState({currentState: \"testOver\"})\r\n    }\r\n\r\n    showImg = () => {\r\n        this.setState({showImg: true});\r\n    };\r\n\r\n    openPopout() {\r\n        this.props.openPopout(\r\n            <Alert\r\n                actions={[{\r\n                    title: 'Нет',\r\n                    autoclose: true,\r\n                    style: 'cancel',\r\n                }, {\r\n                    title: 'Да',\r\n                    autoclose: true,\r\n                    action: this.showImg\r\n                }]}\r\n                onClose={() => this.props.closePopout()}\r\n            >\r\n                <h2>Вопрос значит</h2>\r\n                <p>Вас роняли в детстве?</p>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    onAnswerResult(isCorrect) {\r\n        if (isCorrect) {\r\n            this.setState({\r\n                correctAnswers: ++this.state.correctAnswers,\r\n                answered: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                answered: true\r\n            })\r\n        }\r\n\r\n        this.nextButton.scrollIntoView({behavior: \"smooth\"})\r\n    }\r\n\r\n    showNextQuestion() {\r\n        if (this.state.currentQuestionIndex + 1 > this.state.questions.length) {\r\n            this.setState({\r\n                currentState: \"testOver\",\r\n                answered: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                currentQuestionIndex: this.state.currentQuestionIndex + 1,\r\n                answered: false\r\n            })\r\n        }\r\n    }\r\n\r\n    getCurrentContent(state) {\r\n        console.log(\"questions: \" + this.state.questions)\r\n        switch (state) {\r\n            case \"menu\":\r\n                return this.getMenuContent()\r\n            case \"performingTest\":\r\n                if (this.state.questions.length == 0) {\r\n                    return this.getLoadingContent()\r\n                } else {\r\n                    return this.getQuestionComponent()\r\n                }\r\n            case \"testOver\":\r\n                return this.getSummaryContent()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, setPage, withoutEpic} = this.props\r\n        const content = this.getCurrentContent(this.state.currentState)\r\n\r\n        return(\r\n            <div className=\"contrast_block\" style={{display: 'flex', justifyContent: 'center', backgroundColor: \"rgb(55, 55, 122)\"}}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getMenuContent() {\r\n        return (\r\n            <div className=\"panel panel_list\">\r\n                <h1 className=\"panel_title\">Уровень тестирования</h1>\r\n                <div className=\"menu_item\" onClick={() => this.startTest(\"junior\")}>Начинающий (Junior)</div>\r\n                <div className=\"menu_item\" onClick={() => this.startTest(\"middle\")}>Средний (Middle)</div>\r\n                <div className=\"menu_item\" onClick={() => this.startTest(\"senior\")}>Продвинутый (Senior)</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    startTest(level) {        \r\n        this.setState({\r\n            currentState: \"performingTest\",\r\n            currentQuestionIndex: 1,\r\n            questions: [],\r\n            level: level,\r\n            correctAnswers: 0\r\n        })\r\n\r\n        this.loadRandomQuestions(level)\r\n    }\r\n\r\n    loadRandomQuestions(level) {\r\n        console.log(\"load questions \" + level)\r\n        axios.get(API_URL + \"/question/random?level=\" + level + \"&\" + \"count=20\").then(res => this.setState({\r\n            questions: res.data,\r\n            questionCount: res.data.length,\r\n        }))\r\n    }\r\n\r\n    getSummaryContent() {\r\n        const correctPercentage = Math.round((this.state.correctAnswers * 1.0 / this.state.questions.length * 1.0) * 100);\r\n        return (\r\n            <div style={{marginTop: \"20px\", backgroundColor: \"rgb(55, 55, 122)\"}}>\r\n                <div className=\"panel\" style={{marginBottom: \"10px\"}}>\r\n                    <h2>Следите за новостями в группе VK</h2>\r\n                    <div className=\"center-vertically\">\r\n                        <a style={{marginRight: \"10px\"}} href=\"https://vk.com/javatests\">Перейти в группу</a>\r\n                        <img width=\"50\" src=\"https://leonardo.osnova.io/7e0ec5a0-1e56-2e90-de73-6c402276900d/-/resize/900\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel\" style={{marginBottom: \"10px\"}}>\r\n                    <h1>Тест завершен</h1>\r\n                    <p>Результат: {correctPercentage} %</p>\r\n                    <p>Количество верных ответов: {this.state.correctAnswers}</p>\r\n                </div>\r\n                <div className=\"panel\" style={{display: this.state.hidePoll ? 'none' : 'block', marginBottom: \"10px\"}}>\r\n                        <div>\r\n                            <h2>Что можно было бы улучшить в приложении?</h2>\r\n                            <table className=\"answer_container\" style={{flexWrap: \"wrap\", justifyContent: \"center\"}}>\r\n                                {this.renderPollOption(0, \"Больше вопросов\")}\r\n                                {this.renderPollOption(1, \"Результат по областям Java\")}\r\n                                {this.renderPollOption(2, \"Тестовые задания с оценкой\")}\r\n                                <td className=\"poll_option\" style={{display: this.state.customPollAnswer ? 'none' : 'inherit' }} onClick={() => this.customPollAnswer()}>Другое</td>\r\n                                <div className=\"custom_answer\" style={{display: this.state.customPollAnswer ? 'block' : 'none' }}>\r\n                                    <input type=\"text\" classname=\"textField\"\r\n                                    placeholder=\"Отзывы и пожелания\" onChange={(event) => this.setState({customPollAnswer: event.target.value + \" \"})}/>\r\n                                    <div className=\"button button_field\" onClick={() => this.customPollAnswerReceived()}>Отправить</div>\r\n                                </div>\r\n                            </table>\r\n                        </div>\r\n                </div>\r\n                <div className=\"button\" onClick={() => this.openHomepage()}>Пройти снова</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openHomepage() {\r\n        window.location.href = \"/learnit\"\r\n    }\r\n\r\n    renderPollOption(index, text) {\r\n        var style = {\r\n        display: this.state.customPollAnswer ? 'none' : 'block'}\r\n\r\n        if (this.state.pollAnswer == index) {\r\n            style = {\r\n                display: this.state.customPollAnswer ? 'none' : 'block',\r\n                \"background-color\": this.state.pollAnswer == index ? \"#d9ec8d\" : \"rgb(243, 234, 196)\"} \r\n        }\r\n\r\n        return (\r\n            <td className=\"poll_option\" style={style} onClick={() => this.onPollAnswered(index)}>{text}</td>\r\n        );\r\n    }\r\n\r\n    customPollAnswerReceived() {\r\n        console.log(\"custom: \" + this.state.customPollAnswer)\r\n        if (this.state.customPollAnswer == \"\") {\r\n            return\r\n        }\r\n        this.onPollAnswered(this.state.customPollAnswer)\r\n        this.setState({pollAnswered: true, hidePoll: true})\r\n        alert(\"Спасибо, Вы нам очень помогли!\")\r\n    }\r\n\r\n    // extract API CALLS to a class\r\n    onPollAnswered(answer) {\r\n        console.log(\"poll answer \" + answer)\r\n        this.setState({pollAnswer: answer})\r\n        axios.post(API_URL + \"/question/answer?question=\" + 1000 + \"&\" + \"answer=\" + answer).catch((error) => console.error(error))\r\n    }\r\n\r\n    customPollAnswer() {\r\n        this.setState({customPollAnswer: true})\r\n    }\r\n\r\n    getQuestionComponent() {\r\n        return (\r\n            <div style={{backgroundColor: \"rgb(55, 55, 122)\"}}>\r\n                <div>\r\n                    <div className=\"current_question\">\r\n                        <div className=\"time_circle\">{this.state.time}</div>\r\n                        <a className=\"center question_num\">{this.state.currentQuestionIndex} из {this.state.questionCount}</a>\r\n                    </div>\r\n                </div>\r\n                <Question question={this.state.questions[this.state.currentQuestionIndex - 1]} onAnswerResult={(answer) => this.onAnswerResult(answer)}></Question>\r\n                <div className=\"button\" style={{display: this.state.answered ? 'block' : 'none' }}\r\n                 ref={(button) => this.nextButton = button}\r\n                 onClick={() => this.showNextQuestion()}>Следующий</div>\r\n            </div>\r\n        );\r\n     }\r\n\r\n    getLoadingContent() {\r\n        return <div className=\"loadingContainer\" style={{color: \"white\", fontWeight: \"300\"}}><h1>Loading</h1></div>\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as VK from './js/services/VK';\r\n\r\nimport Home from './js/panels/home/home'\r\nimport Test from './js/panels/home/test'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastAndroidBackAction = 0;\r\n    }\r\n\r\n    state = {\r\n        screen: \"home\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {goBack, dispatch} = this.props;\r\n\r\n        VK.initApp();\r\n\r\n        window.onpopstate = () => {\r\n            let timeNow = +new Date();\r\n\r\n            if (timeNow - this.lastAndroidBackAction > 500) {\r\n                this.lastAndroidBackAction = timeNow;\r\n\r\n                goBack();\r\n            } else {\r\n                window.history.pushState(null, null);\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var screen\r\n        switch (this.state.screen) {\r\n            case \"home\":\r\n                screen = <Home onStartTest={(level) => this.startTest(level)}/>\r\n                break;\r\n            case \"test\":\r\n                screen = <Test level={this.state.testLevel}/>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            screen\r\n        );\r\n    }\r\n\r\n    startTest(level) {\r\n        if (level.length > 0) {\r\n            this.setState({\r\n                screen: \"test\",\r\n                testLevel: level\r\n            })\r\n        }\r\n    }\r\n}","import bridge from \"@vkontakte/vk-bridge\";\r\n\r\nconst APP_ID = 7436508;\r\nconst API_VERSION = '5.92';\r\n\r\nexport const initApp = () => {\r\n    // Sends event to client\r\n    bridge.send('VKWebAppInit');\r\n\r\n    // Subscribes to event, sended by client\r\n    bridge.subscribe(e => console.log(e));\r\n}","import 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './css/main.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}